Starting audit...
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\Baby.java:20:78: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\Child.java:35:24: Parameter id should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\Child.java:35:36: Parameter lastName should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\Child.java:35:53: Parameter firstName should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\Child.java:35:71: Parameter city should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\Child.java:35:84: Parameter age should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\Child.java:36:24: Parameter giftsPreferences should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\Child.java:36:62: Parameter niceScore should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\Child.java:36:80: Parameter elf should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\Child.java:47:9: Class 'Builder' looks like designed for extension (can be subclassed), but the method 'niceScoreBonus' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'niceScoreBonus' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\Child.java:47:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\Child.java:47:39: Parameter niceScoreBonus should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\Child.java:47:43: 'niceScoreBonus' hides a field. [HiddenField]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\Child.java:52:9: Class 'Builder' looks like designed for extension (can be subclassed), but the method 'build' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'build' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\Child.java:52:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\Child.java:61:19: Parameter builder should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\Child.java:83:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getNiceScoreBonus' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getNiceScoreBonus' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\Child.java:87:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setNiceScoreBonus' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setNiceScoreBonus' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\Child.java:88:35: Parameter niceScoreBonus should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\Child.java:131:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getElf' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getElf' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\Child.java:135:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setElf' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setElf' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\Child.java:136:24: Parameter elf should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\ChildFactory.java:32:46: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\ChildStrategy.java:5:13: Using the '.*' form of import should be avoided - elves.*. [AvoidStarImport]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\ChildStrategy.java:23:5: Class 'ChildStrategy' looks like designed for extension (can be subclassed), but the method 'getElfStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildStrategy' final or making the method 'getElfStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\ChildStrategy.java:27:5: Class 'ChildStrategy' looks like designed for extension (can be subclassed), but the method 'setElfStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildStrategy' final or making the method 'setElfStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\ChildStrategy.java:28:32: Parameter elf should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\ChildStrategy.java:32:5: Class 'ChildStrategy' looks like designed for extension (can be subclassed), but the method 'assignElf' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildStrategy' final or making the method 'assignElf' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\ChildStrategy.java:32:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\ChildStrategy.java:33:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\ChildStrategy.java:34:38: Inner assignments should be avoided. [InnerAssignment]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\ChildStrategy.java:35:39: Inner assignments should be avoided. [InnerAssignment]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\ChildStrategy.java:36:39: Inner assignments should be avoided. [InnerAssignment]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\ChildStrategy.java:37:40: Inner assignments should be avoided. [InnerAssignment]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\ChildStrategy.java:54: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\ChildStrategy.java:100:5: Class 'ChildStrategy' looks like designed for extension (can be subclassed), but the method 'addNiceScoreBonus' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildStrategy' final or making the method 'addNiceScoreBonus' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\ChildStrategy.java:100:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\ChildStrategy.java:101:62: '100' is a magic number. [MagicNumber]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\ChildStrategy.java:102:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\ChildStrategy.java:102:27: '10' is a magic number. [MagicNumber]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\ChildStrategy.java:103:9: '{' at column 9 should be on the previous line. [LeftCurly]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\ChildStrategy.java:104:28: '10.0' is a magic number. [MagicNumber]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\ChildUpdate.java:3:8: Unused import - elves.Elf. [UnusedImports]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\ChildUpdate.java:22:24: Parameter elf should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\children\YoungAdult.java:3:8: Unused import - elves.Elf. [UnusedImports]
[ERROR] D:\acs\poo\proiect poo 2\.\src\data\AnnualChange.java:20:29: Parameter strategy should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\elves\BlackElf.java:3:8: Unused import - children.Child. [UnusedImports]
[ERROR] D:\acs\poo\proiect poo 2\.\src\elves\BlackElf.java:7:34: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\acs\poo\proiect poo 2\.\src\elves\BlackElf.java:8:21: Parameter elvesTypeType should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\elves\BlackElf.java:8:46: Parameter child should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\elves\BlackElf.java:12:5: Class 'BlackElf' looks like designed for extension (can be subclassed), but the method 'elfAction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BlackElf' final or making the method 'elfAction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\acs\poo\proiect poo 2\.\src\elves\BlackElf.java:16:28: '30' is a magic number. [MagicNumber]
[ERROR] D:\acs\poo\proiect poo 2\.\src\elves\BlackElf.java:16:33: '100' is a magic number. [MagicNumber]
[ERROR] D:\acs\poo\proiect poo 2\.\src\elves\Elf.java:3:8: Unused import - children.Child. [UnusedImports]
[ERROR] D:\acs\poo\proiect poo 2\.\src\elves\Elf.java:17:16: Parameter elvesTypeType should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\elves\Elf.java:17:41: Parameter child should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\elves\Elf.java:22:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\acs\poo\proiect poo 2\.\src\elves\Elf.java:24:5: Class 'Elf' looks like designed for extension (can be subclassed), but the method 'getElfType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Elf' final or making the method 'getElfType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\acs\poo\proiect poo 2\.\src\elves\Elf.java:28:5: Class 'Elf' looks like designed for extension (can be subclassed), but the method 'setElfType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Elf' final or making the method 'setElfType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\acs\poo\proiect poo 2\.\src\elves\Elf.java:28:28: Parameter elfType should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\elves\Elf.java:31:5: Class 'Elf' looks like designed for extension (can be subclassed), but the method 'getChild' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Elf' final or making the method 'getChild' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\acs\poo\proiect poo 2\.\src\elves\Elf.java:35:5: Class 'Elf' looks like designed for extension (can be subclassed), but the method 'setChild' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Elf' final or making the method 'setChild' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\acs\poo\proiect poo 2\.\src\elves\Elf.java:36:26: Parameter child should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\elves\PinkElf.java:6:33: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\acs\poo\proiect poo 2\.\src\elves\PinkElf.java:7:20: Parameter elvesTypeType should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\elves\PinkElf.java:7:45: Parameter child should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\elves\PinkElf.java:11:5: Class 'PinkElf' looks like designed for extension (can be subclassed), but the method 'elfAction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PinkElf' final or making the method 'elfAction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\acs\poo\proiect poo 2\.\src\elves\PinkElf.java:15:28: '30' is a magic number. [MagicNumber]
[ERROR] D:\acs\poo\proiect poo 2\.\src\elves\PinkElf.java:15:33: '100' is a magic number. [MagicNumber]
[ERROR] D:\acs\poo\proiect poo 2\.\src\elves\WhiteElf.java:6:34: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\acs\poo\proiect poo 2\.\src\elves\WhiteElf.java:7:21: Parameter elvesTypeType should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\elves\WhiteElf.java:7:46: Parameter child should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\elves\YellowElf.java:16:5: Class 'YellowElf' looks like designed for extension (can be subclassed), but the method 'getChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YellowElf' final or making the method 'getChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\acs\poo\proiect poo 2\.\src\elves\YellowElf.java:20:5: Class 'YellowElf' looks like designed for extension (can be subclassed), but the method 'setChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YellowElf' final or making the method 'setChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\acs\poo\proiect poo 2\.\src\elves\YellowElf.java:20:29: Parameter children should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\elves\YellowElf.java:24:5: Class 'YellowElf' looks like designed for extension (can be subclassed), but the method 'elfAction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YellowElf' final or making the method 'elfAction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\acs\poo\proiect poo 2\.\src\elves\YellowElf.java:29:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\acs\poo\proiect poo 2\.\src\elves\YellowElf.java:33: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] D:\acs\poo\proiect poo 2\.\src\gifts\Gift.java:26:29: Parameter quantity should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\santa\SantaClaus.java:56:29: Parameter strategy should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\santa\SantaClaus.java:139: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] D:\acs\poo\proiect poo 2\.\src\santa\SantaClaus.java:139:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\acs\poo\proiect poo 2\.\src\santa\SantaClaus.java:190: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] D:\acs\poo\proiect poo 2\.\src\santa\SantaClaus.java:190:101: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\acs\poo\proiect poo 2\.\src\santa\SantaClaus.java:199: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] D:\acs\poo\proiect poo 2\.\src\santa\SantaClaus.java:199:101: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\acs\poo\proiect poo 2\.\src\santa\SantaClaus.java:241:21: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\acs\poo\proiect poo 2\.\src\santa\SantaClaus.java:274:96: '&&' should be on a new line. [OperatorWrap]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\Sort.java:1:9: Name 'SortChildren' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\Sort.java:8:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortById.java:1:9: Name 'SortChildren' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortById.java:8:38: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortById.java:9:5: Class 'SortById' looks like designed for extension (can be subclassed), but the method 'sortChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortById' final or making the method 'sortChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortById.java:10:30: Parameter children should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortById.java:13:32: Parameter o1 should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortById.java:13:50: Parameter o2 should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScore.java:1:9: Name 'SortChildren' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScore.java:8:45: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScore.java:9:5: Class 'SortByNiceScore' looks like designed for extension (can be subclassed), but the method 'sortChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortByNiceScore' final or making the method 'sortChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScore.java:10:30: Parameter children should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScore.java:13:32: Parameter o1 should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScore.java:13:50: Parameter o2 should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScore.java:14:17: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScore.java:14:72: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScoreCity.java:1:9: Name 'SortChildren' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScoreCity.java:7:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScoreCity.java:9:49: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScoreCity.java:13:5: Class 'SortByNiceScoreCity' looks like designed for extension (can be subclassed), but the method 'getMapCityScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortByNiceScoreCity' final or making the method 'getMapCityScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScoreCity.java:17:5: Class 'SortByNiceScoreCity' looks like designed for extension (can be subclassed), but the method 'getMapCityScores' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortByNiceScoreCity' final or making the method 'getMapCityScores' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScoreCity.java:21:5: Class 'SortByNiceScoreCity' looks like designed for extension (can be subclassed), but the method 'setMapCityScores' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortByNiceScoreCity' final or making the method 'setMapCityScores' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScoreCity.java:21:34: Parameter mapCityScores should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScoreCity.java:25:5: Class 'SortByNiceScoreCity' looks like designed for extension (can be subclassed), but the method 'setMapCityScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortByNiceScoreCity' final or making the method 'setMapCityScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScoreCity.java:25:33: Parameter mapCityScore should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScoreCity.java:29:5: Class 'SortByNiceScoreCity' looks like designed for extension (can be subclassed), but the method 'sortChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortByNiceScoreCity' final or making the method 'sortChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScoreCity.java:30:30: Parameter children should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScoreCity.java:31:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScoreCity.java:33:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScoreCity.java:36:50: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScoreCity.java:39:50: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScoreCity.java:44:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScoreCity.java:47:13: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScoreCity.java:50:47: '/' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScoreCity.java:50:47: '/' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScoreCity.java:55:60: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScoreCity.java:56:17: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScoreCity.java:60:17: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScoreCity.java:61:21: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScoreCity.java:69:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortByNiceScoreCity.java:71:17: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortFactory.java:1:9: Name 'SortChildren' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortFactory.java:7:5: Class 'SortFactory' looks like designed for extension (can be subclassed), but the method 'createSorter' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortFactory' final or making the method 'createSorter' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortFactory.java:7:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortFactory.java:7:30: Parameter criterion should be final. [FinalParameters]
[ERROR] D:\acs\poo\proiect poo 2\.\src\SortChildren\SortFactory.java:8:9: switch without "default" clause. [MissingSwitchDefault]
Audit done.
Checkstyle ends with 134 errors.
